name: 2. FMCSA Extractor (Single Batch)

on:
  workflow_dispatch:
    inputs:
      batch_index:
        description: 'The index of the batch to process (e.g., 0, 1, 2)'
        required: true
      concurrency:
        description: 'Parallel requests for the extractor script'
        required: true
        default: '10'

jobs:
  run-extraction: # Job ka naam 'run-extraction' rakha hai
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download the specific batch file created by dispatcher
        uses: actions/download-artifact@v4
        with:
          name: batch-files
          path: .batches

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Prepare batch.txt for the script
        run: |
          # Find the correct batch file based on index
          BATCH_FILE=$(ls .batches | sort | sed -n '${{ github.event.inputs.batch_index + 1 }}p')
          if [ -z "$BATCH_FILE" ]; then
            echo "::error::Batch file for index ${{ github.event.inputs.batch_index }} not found!"
            exit 1
          fi
          # Copy the correct batch file to 'batch.txt' which the script reads
          cp ".batches/$BATCH_FILE" ./batch.txt
          echo "âœ… Prepared batch.txt for index ${{ github.event.inputs.batch_index }}"

      - name: Run the extractor script
        env:
          CONCURRENCY: ${{ github.event.inputs.concurrency }}
          BATCH_INDEX: ${{ github.event.inputs.batch_index }}
        run: |
          mkdir -p output
          node extractor.js

      - name: Upload the resulting CSV as an artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fmcsa-output-batch-${{ github.event.inputs.batch_index }}
          path: output/*.csv
          if-no-files-found: ignore
          retention-days: 1
