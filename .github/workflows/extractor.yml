name: FMCSA Extractor (Single Batch)

permissions:
  contents: write   # ✅ allow pushing merged file to repo

on:
  workflow_dispatch:
    inputs:
      batch_index:
        description: 'Which batch to run (0-based)'
        required: true
        default: '0'
      batch_size:
        description: 'Batch size'
        required: false
        default: '250'
      concurrency:
        description: 'Parallel requests'
        required: false
        default: '4'
      delay:
        description: 'Delay between waves (ms)'
        required: false
        default: '1000'
      wait_seconds:
        description: 'Pause between batches (not used here)'
        required: false
        default: '0'
      mode:
        description: 'both (extract) or urls (only URLs)'
        required: false
        default: 'both'

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run extractor for this batch
        env:
          MODE: ${{ github.event.inputs.mode }}
          CONCURRENCY: ${{ github.event.inputs.concurrency }}
          DELAY: ${{ github.event.inputs.delay }}
          BATCH_SIZE: ${{ github.event.inputs.batch_size }}
          WAIT_SECONDS: ${{ github.event.inputs.wait_seconds }}
          BATCH_INDEX: ${{ github.event.inputs.batch_index }}
        run: |
          node -v
          mkdir -p output
          node extractor.js

      - name: Upload CSV artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fmcsa-output-batch-${{ github.event.inputs.batch_index }}
          path: output/*.csv
          if-no-files-found: ignore
          retention-days: 7

      # 🔹 Python setup
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install pandas

      - name: Merge all CSVs & Remove Duplicates
        run: |
          python - <<'EOF'
          import os, glob, pandas as pd
          os.makedirs("outbox", exist_ok=True)

          # collect all CSVs (new run + previously merged one)
          csv_files = glob.glob("output/*.csv") + glob.glob("outbox/*.csv")
          merged_rows = []

          for file in csv_files:
              try:
                  df = pd.read_csv(file)
                  merged_rows.append(df)
              except Exception as e:
                  print(f"❌ Failed to read {file}: {e}")

          if merged_rows:
              final_df = pd.concat(merged_rows, ignore_index=True)
              final_df.drop_duplicates(inplace=True)
              output_file = "outbox/merged_fmcsa.csv"
              final_df.to_csv(output_file, index=False)
              print(f"✅ Final merged CSV created with {len(final_df)} rows")
          else:
              print("⚠ No CSV files found for merging.")
          EOF

      - name: Commit & Push merged file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add outbox/merged_fmcsa.csv
          git commit -m "Auto-merged FMCSA CSVs (batch ${{ github.event.inputs.batch_index }})" || echo "No changes to commit"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git HEAD:main
