name: FMCSA Cleanup

permissions:
  actions: write

on:
  workflow_run:
    workflows: ["FMCSA Post Merge"]
    types:
      - completed

concurrency:
  group: cleanup-runs
  cancel-in-progress: true   # âœ… ek hi cleanup run chalega, baaki cancel ho jayenge

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Delete all workflow runs (except latest cleanup itself)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
        run: |
          python - <<'EOF'
          import os, requests

          repo = os.getenv("REPO")
          token = os.getenv("GITHUB_TOKEN")
          this_run = os.getenv("RUN_ID")
          headers = {"Authorization": f"token " + token}

          url = f"https://api.github.com/repos/{repo}/actions/runs?per_page=100"
          resp = requests.get(url, headers=headers)
          runs = resp.json().get("workflow_runs", [])

          print(f"ðŸ”Ž Total runs fetched: {len(runs)}")
          deleted = 0

          for run in runs:
              run_id = str(run["id"])
              if run_id == this_run:   # apna latest cleanup run skip karo
                  continue
              del_url = f"https://api.github.com/repos/{repo}/actions/runs/{run_id}"
              del_resp = requests.delete(del_url, headers=headers)
              if del_resp.status_code == 204:
                  print(f"ðŸ—‘ Deleted run {run['name']} ID {run_id}")
                  deleted += 1
              else:
                  print(f"âš  Failed to delete {run['name']} {run_id}: {del_resp.status_code} {del_resp.text}")

          print(f"âœ… Cleanup done â€” Deleted {deleted} runs")
          EOF
